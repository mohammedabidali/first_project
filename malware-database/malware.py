from abc import abstractmethod

class MalwareClass:
    def __init__(self, name, extension, cve_score, target_os):
        self.name = name
        self.extension = extension
        self.cve_score = cve_score
        self.target_os = target_os

    def update_cve_score(self, cve_score):
        self.cve_score = cve_score

    @abstractmethod
    def attack(self, type = None):
        print("It depends on the type of malware")
        if type == None:
            print("fist scenario")
        else:
            print("second scenario")

    #def attack(self):
        #print("It depends on the type of malware")

    #polymorphysm is when you have the same method name but different parameters, e.g.:




if __name__ == "__main__":
    malware_Object = MalwareClass("malware1", "obj", 8, "Windows10")
    malware_Object.attack(12)
